// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;

class TwoSum {
    public static void main(String[] args) {
        int arr[] = new int[]{2, 7, 11, 15, 5};
        TwoSum obj = new TwoSum();
        boolean v1Output = obj.twoSumV1(arr, 20);
        System.out.println("V1Output Valid case: " + v1Output);
        v1Output = obj.twoSumV1(arr, 21);
        System.out.println("\nV1Output Invalid case: " + v1Output);
        int[] v2Output = obj.twoSumV2(arr, 20);
        System.out.println("V2Output Valid Case:" + v2Output[0] + " " + v2Output[1]);
        
        v2Output = obj.twoSumV2(arr, 21);
        System.out.println("V2Output Invalid Case:" + v2Output[0] + " " + v2Output[1]);
        
    }
    
    //return true if pair exist otherwise false 
    boolean twoSumV1(int arr[], int target) {
        int start = 0, end = arr.length - 1;
        Arrays.sort(arr);
        while (start < end) {
            int currSum = arr[start] + arr[end];
            if (currSum == target) {
                return true;
            } else if (currSum < target) {
                start++;
            } else {
                end--;
            }
        }
        return false;
    }
    
    //return pair of indices of two numbers is equals to given target otherwise return [-1, -1]
    int[] twoSumV2(int arr[], int target) {
        Map<Integer, Integer> map = new HashMap<>();
        int size = arr.length;
        for (int i = 0; i < size; i++) {
            int requiredSum = Math.abs(arr[i] - target);
            if (map.containsKey(requiredSum)) {
                return new int[] { map.get(requiredSum), i };
            } else {
                map.put(arr[i], i);
            }
        }
        return new int[] { -1, -1 };
    }
}
